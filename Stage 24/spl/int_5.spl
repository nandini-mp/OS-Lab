alias userSP R1;
userSP = SP;

alias pcb R2;
pcb = PROCESS_TABLE + 16*[SYSTEM_STATUS_TABLE+1];
[pcb + 13] = SP;
SP = [pcb+11]*512 - 1;

alias syscall R3;
syscall = [[PTBR + ((userSP - 5)/512)*2]*512 + (userSP-5)%512];

alias retAddr R6;
retAddr= [PTBR + ((userSP-1)/512)*2]*512 + (userSP-1)%512;
    
[pcb + 9] = syscall;

if(syscall == INT_OPEN) then
	R4 = [pcb+11]*512 + RESOURCE_TABLE_OFFSET;
	R5 = ([pcb+11]+1)*512;
	while(R4<R5) do
		if([R4] == -1)  then
			break;
		endif;
		R4 = R4 + 2;
	endwhile;

	if(R4 == R5) then
		[retAddr] = -3;
		[pcb + 9] = 0;
		SP =userSP;
        	ireturn;
    	endif;

    	alias fileDescriptor R4;
    	alias file_name R5;

    	file_name = [[PTBR + ((userSP - 4)/512)*2]*512 + (userSP-4)%512];
    	multipush(R1,R2,R3,R4,R5,R6);
    	R1= OPEN;
    	R2 = file_name;
    	call FILE_MANAGER;
    	multipop(R1,R2,R3,R4,R5,R6);

    	if (R0 == -1) then
		[retAddr] = -1;
		[pcb + 9] = 0;
		SP =userSP;
		ireturn;
    	endif;

    	if(R0 == -2) then
		[retAddr] = -2;
		[pcb + 9] = 0;
		SP =userSP;
		ireturn;
    	endif;

    	[fileDescriptor] = FILE;
    	[fileDescriptor+1] = R0; //open file table entry

	[pcb + 9] = 0;
	SP = userSP;
    	[retAddr] = (fileDescriptor - ([pcb + 11]*512 + RESOURCE_TABLE_OFFSET))/2;
    	ireturn;
endif;  

if(syscall == INT_CLOSE) then
	alias fileDescriptor_pprt R4;
	fileDescriptor_pprt = [[PTBR + ((userSP - 4)/512)*2]*512 + (userSP-4)%512];
    	if (fileDescriptor_pprt < 0 || fileDescriptor_pprt > 7) then
		[pcb+9] = 0;
		SP=userSP;
		[retAddr] = -1;
		ireturn;
    	endif;

    alias pprt R5;
    pprt = [pcb+11]*512 + RESOURCE_TABLE_OFFSET;

    if ([pprt + fileDescriptor_pprt*2] != FILE) then
	[pcb+9] = 0;
        SP=userSP;
        [retAddr] = -1;
        ireturn;
    endif;

    alias open_file_table_i R7;
    open_file_table_i=[pprt+1];

    multipush(R1,R2,R3,R4,R5,R6,R7);
    R1 = CLOSE;
    R2 = open_file_table_i;
    call FILE_MANAGER; //MOD 3
    multipop(R1,R2,R3,R4,R5,R6,R7);

    [pprt] = -1;
    [pprt+1] = -1;
    [pcb+9] =0 ;
    SP = userSP;
    ireturn; 

endif;
ireturn;
