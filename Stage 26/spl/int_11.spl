[SYSTEM_STATUS_TABLE + 27] = [SYSTEM_STATUS_TABLE + 27] + 1;
alias userSP R2;
userSP = SP;

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 13] = SP;
SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16+11]*512-1;

alias syscall R3;
R1 = userSP - 5;
syscall = [[PTBR+(R1/512)*2]*512+(R1%512)];

if (syscall == 11) then
	R1 = userSP - 1; //return value
	[[PTBR+(R1/512)*2]*512+(R1%512)] = [SYSTEM_STATUS_TABLE+1];
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 0;
	SP = userSP;
	ireturn;
endif;

if (syscall == 12) then
	R1 = userSP - 1; //return value
	[[PTBR+(R1/512)*2]*512+(R1%512)] = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16+2];
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 0;
	SP = userSP;
	ireturn;
endif;

if (syscall == 13) then
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 13;
	R1 = userSP - 4;
	alias PID R4;
	R4 = [[PTBR+(R1/512)*2]*512+(R1%512)];
	if (PID == [SYSTEM_STATUS_TABLE+1] || [PROCESS_TABLE + PID*16 + 4] == TERMINATED || PID<0 || PID>15) then
		R1 = userSP - 1; //return value
		[[PTBR+(R1/512)*2]*512+(R1%512)] = -1;
		[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 0;
		SP = userSP;
		ireturn;
	endif;
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 4] = WAIT_PROCESS;
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 5] = PID;
	multipush(R1,R2,R3,R4);
	call MOD_5;
	multipop(R1,R2,R3,R4);
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 0;
	R1 = userSP - 1; //return value
	[[PTBR+(R1/512)*2]*512+(R1%512)] = 0;
	SP = userSP;
	ireturn;
endif;

if (syscall == 14) then
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 14;
	alias i R4;
	i = 0;
	while (i<16) do
		if ([PROCESS_TABLE+i*16+4]==WAIT_PROCESS && [PROCESS_TABLE+i*16+5]==[SYSTEM_STATUS_TABLE+1]) then
			[PROCESS_TABLE+i*16+4]=READY;
			[PROCESS_TABLE+i*16+5]=-1;
		endif;
		i=i+1;
	endwhile;
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 0;
	R1 = userSP - 1; //return value
	[[PTBR+(R1/512)*2]*512+(R1%512)] = 0;
	SP = userSP;
	ireturn;
endif;

SP = userSP;
ireturn;
