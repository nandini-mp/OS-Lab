[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = 27;
alias userSP R0;
userSP = SP;
alias username R1;
alias password R2;

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13] = SP;
SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 11]*512-1;

alias retAddr R3;
username = [[PTBR + 2*(userSP-4)/512]*512 + (userSP-4)%512];
password = [[PTBR + 2*(userSP-3)/512]*512 + (userSP-3)%512];
retAddr = [PTBR + 2*(userSP-1)/512]*512 + (userSP-1)%512;

if ([SYSTEM_STATUS_TABLE + 1]!=1) then
	[retAddr] = -2;
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = 0;
	SP = userSP;
	ireturn;
endif;

alias i R4;
alias check R5;
i=0;
check=0;
while (i<16) do
	if ([USER_TABLE+2*i]==username) then
		check=1;
		break;
	endif;
	i=i+1;
endwhile;

if (check==0) then
	[retAddr] = -1;
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = 0;
	SP = userSP;
	ireturn;
endif;

R6 = password;
encrypt R6;

if (R6!=[USER_TABLE+2*i+1]) then
	[retAddr] = -1;
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = 0;
	SP = userSP;
	ireturn;
endif;

[PROCESS_TABLE + 2*16 + 4] = CREATED;
[PROCESS_TABLE + 2*16 + 3] = i;

[PROCESS_TABLE + 16 + 4] = WAIT_PROCESS;
[PROCESS_TABLE + 16 + 5] = 2;

[SYSTEM_STATUS_TABLE] = i;

multipush(R0,R1,R2,R3,R4,R5,R6);
call MOD_5;
multipop(R0,R1,R2,R3,R4,R5,R6);

[retAddr] = 0;
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = 0;
SP = userSP;
ireturn;
